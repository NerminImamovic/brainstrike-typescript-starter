import { InMemoryCache } from '@apollo/client';

// generated by Fragment Matcher plugin
import possibleTypes from '../../generated/fragments';

// used in restore
import { mockCacheData } from './__testData';

export const mockCache = new InMemoryCache({
    ...possibleTypes,
    typePolicies: {
      Query: {
        fields: {
          card(existingData, { args, toReference }) {
            return (
              existingData || toReference({ __typename: 'Card', id: args?.id })
            );
          },
          category(existingData, { args, toReference }) {
            return (
              existingData ||
              toReference({ __typename: 'Category', id: args?.id })
            );
          },
        },
      },
      Card: {
        fields: {
          categories: {
            keyArgs: [],
          },
        },
      },
      Category: {
        fields: {
          cards: {
            keyArgs: [],
          },
        },
      },
    },
  }).restore(mockCacheData);
